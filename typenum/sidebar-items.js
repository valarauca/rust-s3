initSidebarItems({"macro":[["tarr","Create a new type-level arrray. Only usable on Rust 1.13.0 or newer."]],"mod":[["array","This module provides a type-level array of type-level numbers."],["bit","Type-level bits. These are rather simple and are used as the building blocks of the other number types in this crate."],["consts","This module defines aliases for many constants. It is generated by typenum's build script."],["int","Type-level signed integers."],["marker_traits","These are all of the marker traits used in typenum. Note that the definition here for marker traits is slightly different than the conventional one --- we include traits with functions that convert a type to the corresponding value."],["operator_aliases","This module provides aliases for the type operators used in this crate. Their purpose is to increase the ergonomics of performing operations on the types defined here."],["type_operators","This module provides useful type operators that are not defined in `core`."],["uint","Type-level unsigned integers."]],"struct":[["Equal","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Equal`."],["Greater","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Greater`."],["Less","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Less`."]]});